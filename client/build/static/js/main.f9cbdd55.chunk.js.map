{"version":3,"sources":["image/Poke404.png","Components/Message/Message.jsx","Components/Detail/Controller.js","Redux/actions-types.js","Redux/actions.js","Components/Detail/Detail.jsx","image/Pika.gif","Components/Example/Example.jsx","Components/Card/Card.jsx","Components/Loader/Loader.jsx","Components/NavBar/NavBar.jsx","Components/SearchBar/SearchBar.jsx","Components/Paginated/Paginated.jsx","Components/HomePage/HomePage.jsx","Components/LandingPage/LandingPage.jsx","Components/CreatePokemon/Validate.js","image/Pika2.gif","image/Default.png","Components/CreatePokemon/CreatePokemon.jsx","App.js","Redux/reducer.js","Redux/store.js","reportWebVitals.js","index.js"],"names":["Message","_jsxs","className","children","_jsx","src","Poke404","alt","Link","to","Percentage","percentage","concat","GETALLPOKEMONS","GETALLTYPES","GETPOKEMONBYNAME","GETPOKEMONDETAIL","CREATEPOKEMON","DELETEPOKEMON","FILTERPOKEMONSBYTYPE","FILTERPOKEMONSBYCREATED","ORDERBYNAME","ORDERBYATTACK","ORDERBYDEFENSE","SETLOADERTRUE","SETDETAIL","getAllPokemons","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","data","wrap","_context","prev","next","axios","sent","abrupt","type","payload","t0","stop","_x","apply","arguments","getAllTypes","_ref2","_callee2","_context2","console","log","_x2","typeFilter","types","Detail","props","_Details$types","weight","num","id","match","params","history","useHistory","useDispatch","Details","useSelector","state","detail","deleteButton","e","preventDefault","_ref6","_callee6","_context6","delete","_x6","deletePokemon","alert","setTimeout","push","useEffect","_ref4","_callee4","_context4","_x4","getPokemonDetail","_Fragment","length","name","image","map","element","idSearch","created","height","toFixed","style","width","hp","attack","defense","speed","onClick","Example","pika","Card","Loader","MagnifyingGlass","visible","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","Dna","NavBar","prevent","allTypes","handlerOrderByAttack","handlerOrderByDefense","handlerOrderByName","handlerFilterByCreated","handlerFilterByType","_useState","useState","_useState2","_slicedToArray","active","setActive","React","Fragment","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","onChange","value","SearchBar","setPage","Name","setName","handlerButton","searchName","_ref3","_callee3","_context3","_x3","target","handlerInput","placeholder","required","Paginated","pokemonsInPage","allPokemons","currentPage","page","numPages","i","Math","ceil","display","FontAwesomeIcon","icon","faChevronLeft","faChevronRight","HomePage","loading","loader","order","setOrder","_useState3","_useState4","setPokemonsPerPage","_useState5","_useState6","setCurrentPage","lastPokemon","firtsPokemon","renderPokemons","slice","pageNumber","el","LandingPage","validate","info","URL","error","strength","RegExp","test","CreatePokemon","pokemons","names","disabled","setDisabled","setError","setInfo","includes","handlerChangeInfo","_objectSpread","_defineProperty","handlerCheckBox","checked","_toConsumableArray","splice","indexOf","handlerSubmit","Default","_ref5","_callee5","_context5","post","_x5","pika2","onSubmit","htmlFor","min","max","App","Switch","Route","exact","path","component","Redirect","from","intialState","change","store","createStore","undefined","action","pokemonsByType","filteredTypes","filter","pokemon","pokemonsByCreate","filterByCreated","nameSort","sort","a","b","attackSort","defenseSort","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.f9cbdd55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Poke404.4f70b583.png\";","import './Message.css';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Poke404 from '../../image/Poke404.png';\r\n\r\n\r\nexport const Message = () => {\r\n    return (\r\n        <div className='container-mess'>\r\n            <div className='message'>\r\n                <h1>4</h1>\r\n                <img src={Poke404} alt='Poke404' />\r\n                <h1>4</h1>\r\n            </div>\r\n            <div className='infor'>\r\n                <span>Page not Found😔😔!!</span>\r\n                <Link to={'/pokemons'}>\r\n                    <button>⬅Back!!</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};","export const Num = (num) => {\r\n    if(num < 10) {\r\n        const number = num / 10;\r\n        return number;\r\n    } else if(num > 10) {\r\n        const seg = num * 0.10;\r\n        const number = seg.toFixed(2);\r\n        return number;\r\n    } else if(num > 10) {\r\n        const seg = num * 0.100;\r\n        const number = seg.toFixed(2);\r\n        return number;\r\n    };\r\n};\r\n\r\nexport const Weight = (weight) => {\r\n    if(weight < 100) {\r\n        const value = weight / 10;\r\n        return value;\r\n    }else if(weight > 100) {\r\n        const value = weight / 10;\r\n        return value;\r\n    };\r\n};\r\n\r\nexport const Percentage = (percentage) => {\r\n    const value = percentage / 255 * 100;\r\n    return `${value} ${'%'}`\r\n};","export const GETALLPOKEMONS = 'GET_ALL_POKEMONS';\r\nexport const GETALLTYPES = 'GET_ALL_TYPES';\r\nexport const GETPOKEMONBYNAME = 'GET_POKEMON_BY_NAME';\r\nexport const GETPOKEMONDETAIL = 'GET_POKEMON_DETAIL';\r\nexport const CREATEPOKEMON = 'CREATE_POKEMON';\r\nexport const DELETEPOKEMON = 'DELETE_POKEMON';\r\nexport const FILTERPOKEMONSBYTYPE = 'FILTER_POKEMONS_BY_TYPE';\r\nexport const FILTERPOKEMONSBYCREATED = 'FILTER_POKEMONS_BY_CREATED';\r\nexport const ORDERBYNAME = 'ORDER_BY_NAME';\r\nexport const ORDERBYATTACK = 'ORDER_BY_ATTACK';\r\nexport const ORDERBYDEFENSE = 'ORDER_BY_DEFENSE';\r\nexport const SETLOADERTRUE = 'SET_LOADER_TRUE';\r\nexport const SETDETAIL = 'SET_DETAIL';","import {\r\n    GETALLPOKEMONS,\r\n    GETALLTYPES,\r\n    GETPOKEMONBYNAME,\r\n    GETPOKEMONDETAIL,\r\n    CREATEPOKEMON,\r\n    DELETEPOKEMON,\r\n    FILTERPOKEMONSBYTYPE,\r\n    FILTERPOKEMONSBYCREATED,\r\n    ORDERBYNAME,\r\n    ORDERBYATTACK,\r\n    ORDERBYDEFENSE,\r\n    SETLOADERTRUE,\r\n    SETDETAIL\r\n} from './actions-types';\r\nimport axios from 'axios';\r\n\r\nexport const getAllPokemons = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios('http://localhost:3001/pokemons');\r\n            const data = response.data;\r\n\r\n            return dispatch({\r\n                type: GETALLPOKEMONS,\r\n                payload: data\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    };\r\n};\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const getAllTypes = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios('http://localhost:3001/types');\r\n            const data = response.data;\r\n            console.log(data);\r\n\r\n            return dispatch({\r\n                type: GETALLTYPES,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const getPokemonByName = (searchName) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios(`http://localhost:3001/pokemons/?name=${searchName}`);\r\n            const data = response.data;\r\n            // console.log(data);\r\n\r\n            return dispatch({\r\n                type: GETPOKEMONBYNAME,\r\n                payload: data\r\n            });\r\n        } catch (error) {\r\n            // alert(`This pokemon with name ${searchName} not exists`);\r\n            // return dispatch({\r\n            //     type: GETPOKEMONBYNAME,\r\n            //     payload: []\r\n            // });\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const getPokemonDetail = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios(`http://localhost:3001/pokemons/${id}`);\r\n            const data = response.data;\r\n            // console.log([data]);\r\n\r\n            return dispatch({\r\n                type: GETPOKEMONDETAIL,\r\n                payload: [data]\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const postPokemon = (payload) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/pokemons', payload);\r\n            const data = response.data;\r\n\r\n            return dispatch({\r\n                type: CREATEPOKEMON,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const deletePokemon = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.delete(`http://localhost:3001/pokemons/${id}`)\r\n            const data = response.data;\r\n\r\n            return dispatch({\r\n                type: DELETEPOKEMON,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const typeFilter = (types) => {\r\n    return {\r\n        type: FILTERPOKEMONSBYTYPE,\r\n        payload: types\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const filterByCreated = (payload) => {\r\n    return {\r\n        type: FILTERPOKEMONSBYCREATED,\r\n        payload\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const orderByName = (payload) => {\r\n    return {\r\n        type: ORDERBYNAME,\r\n        payload\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const orderByAttack = (payload) => {\r\n    return {\r\n        type: ORDERBYATTACK,\r\n        payload\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const orderByDefense = (payload) => {\r\n    return {\r\n        type: ORDERBYDEFENSE,\r\n        payload\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const setLoader = () => {\r\n    return {\r\n        type: SETLOADERTRUE\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------------------//\r\nexport const setDetail = () => {\r\n    return {\r\n        type: SETDETAIL\r\n    }\r\n}","import './Detail.css';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Message } from '../Message/Message';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Num, Weight, Percentage } from './Controller';\r\nimport { deletePokemon, getPokemonDetail, setDetail } from '../../Redux/actions';\r\n\r\n\r\nexport const Detail = (props) => {\r\n    const id = props.match.params.id;\r\n    // console.log(id);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const Details = useSelector(state => state.detail);\r\n    // console.log((Details));\r\n\r\n    const deleteButton = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deletePokemon(id));\r\n        alert('Removed Pokemon😉😉!!');\r\n        setTimeout(() => {\r\n            history.push('/pokemons')\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getPokemonDetail(id));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setDetail());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            {Details.length ? (\r\n                <div className=''>\r\n                    {Details.name !== 'SequelizeDatabaseError' ? (\r\n                        <div className='container'>\r\n                            <div className='header-main-pokemon'>\r\n                                <span className='number-pokemon'># {Details[0].id}</span>\r\n                                <div className='container-img-pokemon'>\r\n                                    <img src={Details[0].image} alt={`Pokemon ${Details[0].name}`} />\r\n                                </div>\r\n                                <div className='container-info-pokemon'>\r\n                                    <h1>{Details[0].name}</h1>\r\n                                    <div className='card-types info-pokemon-type'>\r\n                                        {Details.types?.map((element) => (<span key={element.idSearch} className={element.name}>{element.name}</span>))}\r\n                                        {Details[0].created ? (<h4>This pokemon has been created</h4>): <h4>This pokemon is from the api</h4>}\r\n                                    </div>\r\n                                    <div className='info-pokemon'>\r\n                                        <div className='group-info'>\r\n                                            <p>Height</p>\r\n                                            <span>{Num(Details[0].height)} M</span>\r\n                                        </div>\r\n                                        <div className='group-info'>\r\n                                            <p>Weight</p>\r\n                                            <span>{Weight(Details[0].weight)} KG</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='container-stats'>\r\n                                <h1>Stats</h1>\r\n                                <div className='stats'>\r\n                                    <div className='stat-group'>\r\n                                        <span>Hp</span>\r\n                                        <div className='progress-bar'>\r\n                                            <div className='progress' style={{ width: Percentage(Details.hp) }} />\r\n                                        </div>\r\n                                        <span className='counter-stat'>{Details[0].hp}</span>\r\n                                    </div>\r\n                                    <div className='stat-group'>\r\n                                        <span>Attack</span>\r\n                                        <div className='progress-bar'>\r\n                                            <div className='progress' style={{ width: Percentage(Details.attack) }} />\r\n                                        </div>\r\n                                        <span className='counter-stat'>{Details[0].attack}</span>\r\n                                    </div>\r\n                                    <div className='stat-group'>\r\n                                        <span>Defense</span>\r\n                                        <div className='progress-bar'>\r\n                                            <div className='progress' style={{ width: Percentage(Details.defense) }} />\r\n                                        </div>\r\n                                        <span className='counter-stat'>{Details[0].defense}</span>\r\n                                    </div>\r\n                                    <div className='stat-group'>\r\n                                        <span>Speed</span>\r\n                                        <div className='progress-bar'>\r\n                                            <div className='progress' style={{ width: Percentage(Details.speed) }} />\r\n                                        </div>\r\n                                        <span className='counter-stat'>{Details[0].speed}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='btns'>\r\n                                <Link to={'/pokemons'}>\r\n                                    <button>⬅Back</button>\r\n                                </Link>\r\n                                <button onClick={(e) => deleteButton(e)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    ) : <Message />}\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Pika.c71ae147.gif\";","import './Example.css';\r\nimport React from \"react\";\r\nimport pika from '../../image/Pika.gif';\r\n\r\n\r\nexport const Example = ({ name, id, image, hp, attack, defense, speed, height, weight, types }) => {\r\n    while (!image) {\r\n        image = pika\r\n    };\r\n\r\n    return (\r\n        <div className='poke-card'>\r\n            <div>{name}</div>\r\n            <div className='img-container'>\r\n                <img className='poke-img' src={image} alt={name} />\r\n            </div>\r\n            <div>N° {id + 1}</div>\r\n            {types[0] && <div className={`poke-types${types[0]}`}>{types[0]}</div>}\r\n            {types[1] && <div className={`poke-types${types[1]}`}>{types[1]}</div>}\r\n\r\n            <div className=\"poke-stats\">Hp: <p>{hp}</p></div>\r\n            <div className=\"poke-stats\">Attack: <p>{attack}</p></div>\r\n            <div className=\"poke-stats\">Defense: <p>{defense}</p></div>\r\n            <div className=\"poke-stats\">Speed: <p>{speed}</p></div>\r\n            <div className=\"poke-stats\">Height: <p>{height}</p></div>\r\n            <div className=\"poke-stats\">Weight: <p>{weight}</p></div>\r\n        </div>\r\n    )\r\n};","import './Card.css';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Card = ({ image, name, id, types }) => {\r\n    // console.log(types)\r\n    return (\r\n        <Link to={'/pokemons/' + id} className='card-pokemon'>\r\n            <div className='card-img'>\r\n                <img src={image} alt={`Pokemon ${name}`} />\r\n            </div>\r\n            <div className='card-info'>\r\n                <span className='pokemon-id'>N° {id}</span>\r\n                <h3>{name}!</h3>\r\n                <div className='card-types'>\r\n                    {types?.map((element) => (<span key={element.idSearch} className={element.name}>{element.name}</span>))}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n};","import './Loader.css';\r\nimport React from \"react\";\r\nimport { Dna, MagnifyingGlass } from 'react-loader-spinner';\r\n\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className='FondLanding'>\r\n            <div className='text'>\r\n                <h1>Loading...</h1>\r\n            </div>\r\n            <div className='queLePasaALupita'>\r\n                <MagnifyingGlass \r\n                    visible={true}\r\n                    height=\"124\"\r\n                    width=\"124\"\r\n                    ariaLabel=\"MagnifyingGlass-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"MagnifyingGlass-wrapper\"\r\n                    glassColor = '#c0efff'\r\n                    color = '#e15b64'\r\n                />\r\n            </div>\r\n            <div className='loading'>\r\n                <Dna \r\n                    visible={true}\r\n                    height=\"260\"\r\n                    width=\"260\"\r\n                    ariaLabel=\"dna-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"dna-wrapper\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import './NavBar.css';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nexport const NavBar = ({\r\n    prevent,\r\n    allTypes,\r\n    handlerOrderByAttack,\r\n    handlerOrderByDefense,\r\n    handlerOrderByName,\r\n    handlerFilterByCreated,\r\n    handlerFilterByType\r\n}) => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <div className='container-filter containerNav'>\r\n                    <div className='icon-filter' onClick={() => setActive(!active)} >\r\n                        <svg\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            fill='none'\r\n                            viewBox='0 0 24 24'\r\n                            strokeWidth='1.5'\r\n                            stroke='currentColor'\r\n                            className='icon'\r\n                        >\r\n                            <path\r\n                                strokeLinecap='round'\r\n                                strokeLinejoin='round'\r\n                                d='M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75'\r\n                            />\r\n                        </svg>\r\n                        <span>Filters</span>\r\n                    </div>\r\n                    <button onChange={(e) => { prevent(e) }}>Reset</button>\r\n                </div>\r\n\r\n                <div className={`container-filters ${active ? 'active' : ''} `} >\r\n                    <div className='filter-by-type'>\r\n                        <span>Types</span>\r\n                        <select onChange={(e) => handlerFilterByType(e)}>\r\n                            <option value='all'>All Types</option>\r\n                            {\r\n                                allTypes?.map((type) => (<option key={type.name} value={type.name} >{type.name}</option>))\r\n                            }\r\n                        </select>\r\n\r\n                        <span>Order By Attack</span>\r\n                        <select onChange={handlerOrderByAttack}>\r\n                            <option value=\"inorder\">No Attack Order</option>\r\n                            <option value=\"+atk\">ATK+</option>\r\n                            <option value=\"-atk\"> -ATK</option>\r\n                        </select>\r\n\r\n                        <span>Order By Defense</span>\r\n                        <select onChange={handlerOrderByDefense}>\r\n                            <option value=\"inorder\">No Defense Order</option>\r\n                            <option value=\"+def\">DEF+</option>\r\n                            <option value=\"-def\"> -DEF</option>\r\n                        </select>\r\n\r\n                        <span>Alphabetical Order</span>\r\n                        <select onChange={handlerOrderByName}>\r\n                            <option value=\"inorder\">No Alphabetical Order</option>\r\n                            <option value=\"asc\">A-Z</option>\r\n                            <option value=\"dsc\">Z-A</option>\r\n                        </select>\r\n\r\n                        <span>Bring From</span>\r\n                        <select onChange={handlerFilterByCreated}>\r\n                            <option value=\"all\">ALL</option>\r\n                            <option value=\"API\">API</option>\r\n                            <option value=\"DB\">CREATED</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};","import './SearchBar.css';\r\nimport React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\n// import { useHistory } from 'react-router-dom';\r\nimport { getPokemonByName } from \"../../Redux/actions\";\r\n\r\n\r\nexport const SearchBar = ({ setPage }) => {\r\n    // const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [Name, setName] = useState('');\r\n\r\n    const handlerInput = (e) => {\r\n        e.preventDefault();\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const handlerButton = (e) => {\r\n        // if (Name !== getPokemonByName(Name)) {\r\n        //     // alert(`This pokemon with name ${Name} not exists`)\r\n        //     return 'el pepe'\r\n        // }\r\n        if (Name === '') {\r\n            alert('There is nothing to look for😐😐!!')\r\n        } else {\r\n            e.preventDefault()\r\n            dispatch(getPokemonByName(Name));\r\n            setName('');\r\n            setPage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header className='container-search'>\r\n            <Link to='/' className='logo'>\r\n                <img src=\"https://archives.bulbagarden.net/media/upload/4/4b/Pok%C3%A9dex_logo.png\" alt=\"Logo Pokedex\" />\r\n            </Link>\r\n\r\n            <form onChange={(e) => handlerInput(e)}>\r\n                <div className='form-group'>\r\n                    <svg\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        fill='none'\r\n                        viewBox='0 0 24 24'\r\n                        strokeWidth='1.5'\r\n                        stroke='currentColor'\r\n                        className='icon-search'\r\n                    >\r\n                        <path d='M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z' />\r\n                    </svg>\r\n                    <input type=\"text\" placeholder='search...' onChange={(e) => { console.log('ignorar') }} value={Name} required='required' />\r\n                    <button type='submit' onClick={(e) => handlerButton(e)} className='btn-search' >Search</button>\r\n                </div>\r\n            </form>\r\n            <Link to={'/create'}>\r\n                <button className=\"btn-create\">Create a Pokemon</button>\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\n","import './Paginated.css';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport const Paginated = ({ pokemonsInPage, allPokemons, currentPage, page }) => {\r\n    const numPages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(allPokemons / pokemonsInPage); i++) {\r\n        numPages.push(i);\r\n    };\r\n\r\n    return (\r\n        <div className='container-pag'>\r\n            <div className='children'>\r\n                <button className=\"btnNav\" style={page <= 1 ? { display: 'none' } : {}} onClick={() => currentPage(page - 1)}><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                {numPages && numPages.map((num) => {\r\n                    return <button className=\"page\" key={num} onClick={() => currentPage(num)} >{num}</button>\r\n                })}\r\n                <button className=\"btnNav\" style={page >= numPages.length ? { display: \"none\" } : {}} onClick={() => currentPage(page + 1)} ><FontAwesomeIcon icon={faChevronRight} /></button>\r\n            </div>\r\n            <p>Page {page} of {numPages.length}</p>\r\n        </div>\r\n    )\r\n};","import './HomePage.css';\r\nimport { Card } from '../Card/Card';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { NavBar } from '../NavBar/NavBar';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { Paginated } from '../Paginated/Paginated';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport { filterByCreated, getAllPokemons, getAllTypes, orderByAttack, orderByDefense, orderByName, setLoader, typeFilter } from '../../Redux/actions';\r\n\r\n\r\n\r\nexport const HomePage = () => {\r\n    const allPokemons = useSelector((state) => state.allPokemons);\r\n    const allTypes = useSelector((state) => state.types);\r\n    const loading = useSelector((state) => state.loader);\r\n    const [order, setOrder] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPokemons());\r\n        dispatch(getAllTypes());\r\n        return (() => {\r\n            dispatch(setLoader());\r\n        });\r\n    }, [dispatch]);\r\n\r\n    const [pokemonsInPage, setPokemonsPerPage] = useState(12);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const lastPokemon = currentPage * pokemonsInPage;\r\n    const firtsPokemon = lastPokemon - pokemonsInPage;\r\n    const renderPokemons = allPokemons.slice(firtsPokemon, lastPokemon);\r\n    const Page = (pageNumber) => { setCurrentPage(pageNumber) };\r\n\r\n    console.log(order, setPokemonsPerPage);\r\n\r\n    //MANEJADORES DE EVENTOS:\r\n\r\n    const prevent = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getAllPokemons());\r\n        dispatch(getAllTypes());\r\n    };\r\n\r\n    const handlerFilterByType = (e) => {\r\n        e.preventDefault();\r\n        console.log('MI prueba', typeFilter(e.target.value));\r\n        dispatch(typeFilter(e.target.value));\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handlerFilterByCreated = (e) => {\r\n        e.preventDefault();\r\n        dispatch(filterByCreated(e.target.value));\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handlerOrderByName = (e) => {\r\n        e.preventDefault();\r\n        dispatch(orderByName(e.target.value));\r\n        setOrder(e.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handlerOrderByAttack = (e) => {\r\n        e.preventDefault();\r\n        dispatch(orderByAttack(e.target.value));\r\n        setOrder(e.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handlerOrderByDefense = (e) => {\r\n        e.preventDefault();\r\n        dispatch(orderByDefense(e.target.value));\r\n        setOrder(e.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const setPage = (e) => {\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Loader />) :\r\n                <div>\r\n                    <SearchBar setPage={setPage} />\r\n\r\n                    <NavBar\r\n                        prevent={prevent}\r\n                        handlerOrderByAttack={handlerOrderByAttack}\r\n                        handlerOrderByDefense={handlerOrderByDefense}\r\n                        handlerOrderByName={handlerOrderByName}\r\n                        handlerFilterByCreated={handlerFilterByCreated}\r\n                        handlerFilterByType={handlerFilterByType}\r\n                        allTypes={allTypes}\r\n                    />\r\n\r\n                    <Paginated\r\n                        pokemonsInPage={pokemonsInPage}\r\n                        allPokemons={allPokemons.length}\r\n                        currentPage={Page}\r\n                        page={currentPage}\r\n                    />\r\n                    <div className='container'>\r\n                        <div className='card-list-pokemon'>\r\n                            {renderPokemons?.map((el) => {\r\n                                return (\r\n                                    <Fragment key={el.id}>\r\n                                        <Card key={el.id} image={el.image} name={el.name} id={el.id} type={el.types} />\r\n                                    </Fragment>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport './LandingPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const LandingPage = () => {\r\n    return (\r\n        <div className=\"Fond\">\r\n            <div className=\"tittle\">\r\n                <h1>POKEMONPAGE</h1>\r\n            </div>\r\n            <div className=\"button\">\r\n                <Link to={'/pokemons'}>\r\n                    <button>START NOW!!</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};","    const validateUrl = (URL) => {\r\n    const regex = new RegExp(/(https?:\\/\\/.*\\.(?:png|jpg|svg))/);\r\n    return regex.test(URL);\r\n};\r\n\r\n\r\nexport const validate = (info) => {\r\n    let error = {};\r\n\r\n    if(info.name.length > 0 && info.name.length < 4) error.name = 'The name must have a minimum of 5 letters😐😐!!';\r\n    if(info.name.length > 15) error.name = 'The name cannot have more than 15 letters🤔🤔!!';\r\n    if(info.strength <= 0) error.strength = 'Need strength🤔🤔!!';\r\n    if(info.defense <= 0) error.defense = 'Need defense🤔🤔!!';\r\n    if(info.attack <= 0) error.attack = 'Need attack🤔🤔!!';\r\n    if(info.height <= 0) error.height = 'Need height🤔🤔!!';\r\n    if(info.weight <= 0) error.weight = 'Need weight🤔🤔!!';\r\n    if(info.speed <= 0) error.speed = 'Need speed🤔🤔!!';\r\n    if(!info.name) error.name = 'You must   put a name😐😐!!';\r\n    if(info.hp <= 0) error.hp = 'Need hp🤔🤔!!';\r\n    if(validateUrl(info.image) && info.image !== '') error.image = 'Unsupported format🤔🤔!!';\r\n    return error;\r\n}","export default __webpack_public_path__ + \"static/media/Pika2.91f18df6.gif\";","export default __webpack_public_path__ + \"static/media/Default.f2b9cf42.png\";","import './CreatePokemon.css' \r\nimport { validate } from './Validate' \r\nimport pika2 from '../../image/Pika2.gif' \r\nimport { Example } from '../Example/Example' \r\nimport Default from '../../image/Default.png' \r\nimport React, { useEffect, useState } from 'react' \r\nimport { Link, useHistory } from 'react-router-dom' \r\nimport { useDispatch, useSelector } from 'react-redux' \r\nimport { getAllTypes, postPokemon } from '../../Redux/actions' \r\n\r\n\r\nexport const CreatePokemon = () => {\r\n    const dispatch = useDispatch() \r\n\r\n    const types = useSelector(state => state.types) \r\n    const pokemons = useSelector(state => state.allPokemons) \r\n    const id = pokemons.length \r\n    console.log('This is id', id) \r\n\r\n    const names = pokemons.map((element) => element.name) \r\n\r\n    useEffect(() => {\r\n        dispatch(getAllTypes())\r\n    }, [dispatch]) \r\n\r\n    const history = useHistory() \r\n    const [disabled, setDisabled] = useState(false) \r\n    const [error, setError] = useState({}) \r\n    const [info, setInfo] = useState({\r\n        name: '',\r\n        hp: '',\r\n        defense: '',\r\n        attack: '',\r\n        speed: '',\r\n        height: '',\r\n        weight: '',\r\n        image: '',\r\n        types: []\r\n    }) \r\n\r\n    useEffect(() => {\r\n        info.types.length > 2 || info.types.length === 0 || names.includes(info.name) ? setDisabled(true) : setDisabled(false) \r\n    }, [names, info.name, info.types.length]) \r\n\r\n    const handlerChangeInfo = (e) => {\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]: e.target.value\r\n        }) \r\n        setError(\r\n            validate({\r\n                ...info,\r\n                [e.target.name]: e.target.value\r\n            })) \r\n    } \r\n\r\n    const handlerCheckBox = (e) => {\r\n        if (e.target.checked) {\r\n            setInfo({\r\n                ...info,\r\n                types: [...info.types, e.target.value]\r\n            }) \r\n        } \r\n        if (!e.target.checked) {\r\n            info.types.splice(info.types.indexOf(e.target.value), 1) \r\n            setInfo({\r\n                ...info\r\n            }) \r\n        } \r\n    } \r\n\r\n    // {\r\n    //     method: 'POST',\r\n    //     body: JSON.stringify(info),\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     }\r\n    // }\r\n\r\n    const handlerSubmit = (e) => {\r\n        if (info.image === '') info.image = Default \r\n        e.preventDefault() \r\n        dispatch(postPokemon(info)) \r\n        setInfo({\r\n            name: '',\r\n            hp: '',\r\n            defense: '',\r\n            attack: '',\r\n            speed: '',\r\n            height: '',\r\n            weight: '',\r\n            image: '',\r\n            types: []\r\n        }) \r\n        alert('New Pokemon Created Crack🤩🤩!!!') \r\n        setTimeout(() => {\r\n            history.push('/pokemons') \r\n        }, 1000) \r\n    } \r\n\r\n    return (\r\n        <div className='all'>\r\n            <div className='formulario'>\r\n                <div className='titulo'>\r\n                    <Link to={'/pokemons'}>\r\n                        <h1>Create your Pokemon😏!!</h1>\r\n                    </Link>\r\n                    <img src={pika2} alt=\"piko\" />\r\n                    <Link to={'/pokemons'}>\r\n                        <button>⬅Back!!</button>\r\n                    </Link>\r\n                </div>\r\n                <form className='form' onSubmit={(e) => { handlerSubmit(e) }}>\r\n                    <div className='input-name'>\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input type=\"text\" name='name' id='name' value={info.name} onChange={handlerChangeInfo} required='required' />\r\n                        {names.includes(info.name) ? (<span>This pokemon already exists🤨🤨!!</span>) : null} \r\n                        {error.name && (<span>{error.name}</span>)} \r\n                    </div>\r\n                    <div className='data_1'>\r\n                        <div>\r\n                            <label htmlFor='hp'>Hp:</label>\r\n                            <input type='range' name='hp' id='hp' min='1' max='255' value={info.hp} onChange={handlerChangeInfo} required='required' />\r\n                            <span>{info.hp}</span>\r\n                            {error.hp && (<span>{error.hp}</span>)} \r\n                        </div>\r\n                        <div> \r\n                            <label htmlFor='defense'>Defense:</label>\r\n                            <input type='range' name='defense' id='defense' min='1' max='255' value={info.defense} onChange={handlerChangeInfo} required='required' />\r\n                            <span>{info.defense}</span>\r\n                            {error.defense && (<span>{error.defense}</span>)} \r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor='attack'>Attack:</label>\r\n                            <input type='range' name='attack' id='attack' min='1' max='255' value={info.attack} onChange={handlerChangeInfo} required='required' />\r\n                            <span>{info.attack}</span>\r\n                            {error.attack && (<span>{error.attack}</span>)} \r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor='speed'>Speed:</label>\r\n                            <input type='range' name='speed' id='speed' min='1' max='255' value={info.speed} onChange={handlerChangeInfo} required='required' />\r\n                            <span>{info.speed}</span>\r\n                            {error.speed && (<span>{error.speed}</span>)} \r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor='height'>Height:</label>\r\n                            <input type='range' name='height' id='height' min='1' max='1000' value={info.height} onChange={handlerChangeInfo} required='required' />\r\n                            <span>{info.height}</span>\r\n                            {error.height && (<span>{error.height}</span>)} \r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor='weight'>Weight:</label>\r\n                            <input type='range' name='weight' id='weight' min='1' max='1000' value={info.weight} onChange={handlerChangeInfo} required='required' />\r\n                            <span>{info.weight}</span>\r\n                            {error.weight && (<span>{error.weight}</span>)} \r\n                        </div>\r\n                    </div>\r\n                    <div className='input-img'>\r\n                        <label htmlFor=\"image\">Image: </label>\r\n                        <input type=\"text\" name='image' value={info.image} onChange={handlerChangeInfo} />\r\n                        {error.image && (<span>{error.image}</span>)} \r\n                    </div>\r\n                    <div className='data_2'>\r\n                        <span htmlFor='types'>Types:</span>\r\n                        <div className='types'>\r\n                            {types?.map((element) => {\r\n                                return (\r\n                                    <div key={element.idSearch}>\r\n                                        <label htmlFor=\"types\">{element.name}</label>\r\n                                        <input type=\"checkbox\" name={element.name} value={element.idSearch} className={element.name} onChange={handlerCheckBox} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        {info.types.length > 2 || info.types.length === 0 ? (\r\n                            <h3>Max Two Crack😎😎!!</h3>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className='btn-crt'>\r\n                        <button type='submit' disabled={disabled}>CREATE POKEMON!!</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <Example\r\n                image={info.image}\r\n                id={id}\r\n                name={info.idSearch}\r\n                types={info.types}\r\n                hp={info.hp}\r\n                attack={info.attack}\r\n                defense={info.defense}\r\n                speed={info.speed}\r\n                height={info.height}\r\n                weight={info.weight}\r\n            />\r\n        </div>\r\n    ) \r\n} ","import './App.css';\r\nimport { Detail } from './Components/Detail/Detail';\r\nimport { Message } from './Components/Message/Message';\r\nimport { Example } from './Components/Example/Example';\r\nimport { HomePage } from './Components/HomePage/HomePage';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { LandingPage } from './Components/LandingPage/LandingPage';\r\nimport { CreatePokemon } from './Components/CreatePokemon/CreatePokemon';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path={'/pruebas'} component={Example} />\r\n        <Route exact path={'/'} component={LandingPage} />\r\n        <Route exact path={'/pokemons'} component={HomePage} />\r\n        <Route exact path={'/create'} component={CreatePokemon} />\r\n        <Route exact path={'/pokemons/:id'} component={Detail} />\r\n        <Route exact path={'/not found'} component={Message} />\r\n        <Redirect from='*' to={'not found'} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n    GETALLPOKEMONS,\r\n    GETALLTYPES,\r\n    GETPOKEMONBYNAME,\r\n    GETPOKEMONDETAIL,\r\n    CREATEPOKEMON,\r\n    DELETEPOKEMON,\r\n    FILTERPOKEMONSBYTYPE,\r\n    FILTERPOKEMONSBYCREATED,\r\n    ORDERBYNAME,\r\n    ORDERBYATTACK,\r\n    ORDERBYDEFENSE,\r\n    SETLOADERTRUE,\r\n    SETDETAIL\r\n} from './actions-types';\r\n\r\nconst intialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    change: [],\r\n    types: [],\r\n    detail: [],\r\n    loader: true\r\n};\r\n\r\nexport const rootReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GETALLPOKEMONS:\r\n            return {\r\n                ...state,\r\n                loader: false,\r\n                allPokemons: [...action.payload], //distitas copias para trabajar\r\n                pokemons: [...action.payload],\r\n                change: [...action.payload],\r\n            };\r\n\r\n\r\n        case GETALLTYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload\r\n            };\r\n\r\n\r\n        case FILTERPOKEMONSBYTYPE:\r\n            const pokemonsByType = state.pokemons;\r\n            const filteredTypes = action.payload === 'all' ?\r\n                pokemonsByType : pokemonsByType.filter((pokemon) => pokemon.types.includes(action.payload));\r\n                console.log(pokemonsByType);\r\n            return {\r\n                ...state,\r\n                allPokemons: filteredTypes,\r\n                change: [...filteredTypes]\r\n            };\r\n\r\n\r\n        case FILTERPOKEMONSBYCREATED:\r\n            const pokemonsByCreate = state.pokemons;\r\n            let filterByCreated = action.payload === 'DB' ?\r\n                pokemonsByCreate.filter((element) => element.created === true) :\r\n                pokemonsByCreate.filter((element) => element.created === false);\r\n\r\n            if (action.payload === 'all') filterByCreated = pokemonsByCreate;\r\n            return {\r\n                ...state,\r\n                allPokemons: filterByCreated\r\n            };\r\n\r\n\r\n        case ORDERBYNAME:\r\n            let nameSort;\r\n            if (action.payload === 'asc') {\r\n                nameSort = state.allPokemons.sort((a, b) => {\r\n                    if (a.name > b.name) return 1;\r\n                    if (a.name < b.name) return -1;\r\n                    return 0;\r\n                })\r\n            } else if (action.payload === 'dsc') {\r\n                nameSort = state.allPokemons.sort((a, b) => {\r\n                    if (a.name < b.name) return 1;\r\n                    if (a.name > b.name) return -1;\r\n                    return 0;\r\n                })\r\n            } else {\r\n                nameSort = state.change.slice()\r\n            }\r\n            return {\r\n                ...state,\r\n                allPokemons: nameSort\r\n            }\r\n\r\n\r\n        case ORDERBYATTACK:\r\n            let attackSort;\r\n            if (action.payload === '+atk') {\r\n                attackSort = state.allPokemons.sort((a, b) => {\r\n                    if (a.attack < b.attack) return 1;\r\n                    if (a.attack > b.attack) return -1;\r\n                    return 0;\r\n                })\r\n            } else if (action.payload === '-atk') {\r\n                attackSort = state.allPokemons.sort((a, b) => {\r\n                    if (a.attack > b.attack) return 1;\r\n                    if (a.attack < b.attack) return -1;\r\n                    return 0;\r\n                })\r\n            } else {\r\n                attackSort = state.change.slice();\r\n            }\r\n            return {\r\n                ...state,\r\n                allPokemons: attackSort\r\n            }\r\n            \r\n\r\n        case ORDERBYDEFENSE:\r\n            let defenseSort;\r\n            if (action.payload === '+def') {\r\n                defenseSort = state.allPokemons.sort((a, b) => {\r\n                    if (a.defense < b.defense) return 1;\r\n                    if (a.defense > b.defense) return -1;\r\n                    return 0;\r\n                })\r\n            } else if (action.payload === '-def') {\r\n                defenseSort = state.allPokemons.sort((a, b) => {\r\n                    if (a.defense > b.defense) return 1;\r\n                    if (a.defense < b.defense) return -1;\r\n                    return 0;\r\n                })\r\n            } else {\r\n                defenseSort = state.change.slice();\r\n            }\r\n            return {\r\n                ...state,\r\n                allPokemons: defenseSort\r\n            }\r\n\r\n\r\n        case GETPOKEMONBYNAME:\r\n            if (!action.payload) alert();\r\n            return {\r\n                ...state,\r\n                allPokemons: [...action.payload]\r\n            }\r\n\r\n        case CREATEPOKEMON:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case GETPOKEMONDETAIL:\r\n            return {\r\n                ...state,\r\n                detail: [...action.payload]\r\n            }\r\n\r\n        case SETLOADERTRUE:\r\n            return {\r\n                ...state,\r\n                loader: true\r\n            }\r\n\r\n        case DELETEPOKEMON:\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case SETDETAIL:\r\n            return {\r\n                ...state,\r\n                detail: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducer';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './index.css';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store } from './Redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}